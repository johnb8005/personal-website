{"version":3,"sources":["ui/utils.tsx","ui/index.tsx","App.tsx","data.ts","reportWebVitals.ts","index.tsx"],"names":["Header","name","title","picture","className","src","alt","Phone","phone","sanitized","replace","href","Email","email","print","Footer","id","UIMain","data","document","links","map","l","i","icon","linksFooter","f","length","App","myParam","URLSearchParams","window","location","search","get","Error","JSON","parse","atob","Data","err","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6IAEaA,EAAS,SAAC,GAQhB,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,QAMA,OACE,mCACE,sBAAMC,UAAU,SAAhB,SACE,qBAAKC,IAAKF,EAAQE,IAAKC,IAAKL,MAE9B,6BAAKA,IACL,4BAAIC,QAKGK,EAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAEhBC,EAAYD,EAAME,QAAQ,WAAY,IACtCC,EAAI,cAAUF,GAEpB,OAAO,mBAAGE,KAAMA,EAAT,SAAgBH,KAGZI,EAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAChBC,EAAQD,EAAMH,QAAQ,KAAM,SAC5BC,EAAI,iBAAaE,GAEvB,OAAO,mBAAGF,KAAMA,EAAT,SAAgBG,KAGZC,EAAS,SAAC,GAAgC,IAA9Bd,EAA6B,EAA7BA,KACvB,OACE,yBAAQe,GAAG,SAAX,UACE,oBAAIZ,UAAU,YAAd,SACE,uCAAYH,OAEd,oBAAIG,UAAU,YAAd,SAOE,0CACU,mBAAGO,KAAK,qBAAR,+BCNHM,EAxCA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAEhB,OADAC,SAASjB,MAAQgB,EAAKjB,KAEpB,qCACE,0BAASe,GAAG,OAAZ,UACE,cAAC,EAAD,CAAWf,KAAMiB,EAAKjB,KAAMC,MAAOgB,EAAKhB,MAAOC,QAASe,EAAKf,UAC7D,iCACE,oBAAIC,UAAU,QAAd,SACGc,EAAKE,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OACd,6BACE,mBAAGZ,KAAMW,EAAEX,KAAMP,UAAS,eAAUkB,EAAEE,MAAtC,SACGF,EAAErB,QAFEsB,UASf,8BACE,cAAC,EAAD,CAAUf,MAAOU,EAAKV,QACtB,uBACA,cAAC,EAAD,CAAUK,MAAOK,EAAKL,QACtB,uBAECK,EAAKO,YAAYJ,KAAI,SAACK,EAAGH,GAAJ,OACpB,iCACE,mBAAGZ,KAAMe,EAAEf,KAAX,SACE,mBAAGP,UAAS,eAAUsB,EAAEF,UAEzBD,EAAIL,EAAKO,YAAYE,OAAS,GAAK,QAJ3BJ,YAUjB,cAAC,EAAD,CAAWtB,KAAMiB,EAAKjB,WChBb2B,MAnBf,WACE,IACE,IAAMV,ECKsB,WAC9B,IACMW,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5BC,IAAI,QAE9B,IAAKL,EACH,MAAMM,MAAM,4BASd,OANUC,KAAKC,MAAMC,KAAKT,IDbXU,GACb,OAAO,cAAC,EAAD,CAAIrB,KAAMA,IACjB,MAAOsB,GACP,OACE,qCACE,4BACE,oDAGF,gCACE,8BAAMA,EAAIC,iBEHLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCHdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,YAM1BZ,M","file":"static/js/main.eff6527d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = ({\n  name,\n  title,\n  picture,\n}: {\n  name: string;\n  title: string;\n  picture: { src: string };\n}) => {\n  return (\n    <header>\n      <span className=\"avatar\">\n        <img src={picture.src} alt={name} />\n      </span>\n      <h1>{name}</h1>\n      <p>{title}</p>\n    </header>\n  );\n};\n\nexport const Phone = ({ phone }: { phone: string }) => {\n  // replace all but digits or `+`\n  const sanitized = phone.replace(/[^0-9+]/g, \"\");\n  const href = `tel:${sanitized}`;\n\n  return <a href={href}>{phone}</a>;\n};\n\nexport const Email = ({ email }: { email: string }) => {\n  const print = email.replace(/@/g, \" [@] \");\n  const href = `mailto:${email}`;\n\n  return <a href={href}>{print}</a>;\n};\n\nexport const Footer = ({ name }: { name: string }) => {\n  return (\n    <footer id=\"footer\">\n      <ul className=\"copyright\">\n        <li>&copy; {name}</li>\n      </ul>\n      <ul className=\"copyright\">\n        {/*<li>\n          Source:{\" \"}\n          <a href=\"https://github.com/johnb8005/personal-website\">\n            <i className=\"icon solid fa-code\"></i>\n          </a>\n        </li>*/}\n        <li>\n          Design: <a href=\"http://html5up.net\">HTML5 UP</a>\n        </li>\n      </ul>\n    </footer>\n  );\n};\n","import React from \"react\";\n\nimport * as T from \"../type\";\nimport * as UI from \"./utils\";\n\nconst UIMain = ({ data }: { data: T.Data }) => {\n  document.title = data.name;\n  return (\n    <>\n      <section id=\"main\">\n        <UI.Header name={data.name} title={data.title} picture={data.picture} />\n        <footer>\n          <ul className=\"icons\">\n            {data.links.map((l, i) => (\n              <li key={i}>\n                <a href={l.href} className={`icon ${l.icon}`}>\n                  {l.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </footer>\n\n        <p>\n          <UI.Phone phone={data.phone} />\n          <br />\n          <UI.Email email={data.email} />\n          <br />\n\n          {data.linksFooter.map((f, i) => (\n            <span key={i}>\n              <a href={f.href}>\n                <i className={`icon ${f.icon}`}></i>\n              </a>\n              {i < data.linksFooter.length - 1 && \" | \"}\n            </span>\n          ))}\n        </p>\n      </section>\n\n      <UI.Footer name={data.name} />\n    </>\n  );\n};\n\nexport default UIMain;\n","import React from \"react\";\n\nimport * as Data from \"./data\";\nimport UI from \"./ui\";\n\nfunction App() {\n  try {\n    const data = Data.getDataFromParam();\n    return <UI data={data} />;\n  } catch (err) {\n    return (\n      <>\n        <p>\n          <i>An error occurred</i>\n        </p>\n\n        <small>\n          <pre>{err.message}</pre>\n        </small>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import * as T from \"./type\";\n\nconst isData = (d: any): d is T.Data => {\n  return true;\n};\n\n/**\n * this translates the Data object into a bas64 string that can then easily be transported via url\n * @param d: data object\n */\nexport const toParam = (d: T.Data) => btoa(JSON.stringify(d));\n\nexport const getDataFromParam = (): T.Data => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const myParam = urlParams.get(\"data\");\n\n  if (!myParam) {\n    throw Error(\"param could not be found\");\n  }\n\n  const d = JSON.parse(atob(myParam));\n\n  if (!isData(d)) {\n    throw Error(\"param could not be read\");\n  }\n\n  return d;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"wrapper\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}